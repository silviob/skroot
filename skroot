#!/bin/sh

OPTS=`getopt -o o:s --long output:server \
     -n $0 -- "$@"`

eval set -- "$OPTS"

OUTPUT=`pwd`/skr.oot
SERVER=0

while true ; do
	case "$1" in
        -o|--output) OUTPUT=$2 ; shift 2 ;;
        -s|--server) SERVER=1 ; shift 1 ;;
        --) shift ; break ;;
        *) echo "Internal error!" ; exit 1 ;;
	esac
done

THIS="`realpath \"$0\"`"
LOCATION="`dirname \"$THIS\"`"            # relative
LOCATION="`( cd \"$LOCATION\" && pwd )`"  # absolutized and normalized
if [ -z "$LOCATION" ] ; then
  # error; for some reason, the path is not accessible
  # to the script (e.g. permissions re-evaled after suid)
  exit 1  # fail
fi

if [ "x$SERVER" = "x1" ] ; then
  ruby $LOCATION/skroot-server.rb $@
else
  LOGFILE=$OUTPUT
  echo "+ scrutinizing: '$@'"
  echo "+ log at: $LOGFILE"
  export LD_PRELOAD=libdl.so:$LOCATION/libskroot.so:$LD_PRELOAD
  export SKROOT_FILE=$LOGFILE
  $@ # executes the command with LD_PRELOAD taking effect.
fi